apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-clone-task
spec:
  params:
    - name: url
      type: string
      description: "URL del repositorio Git"
      default: "https://github.com/aramos20/test.git"
    - name: revision
      type: string
      description: "Branch o commit a clonar"
      default: "main"
  workspaces:
    - name: output
      mountPath: /workspace # Monta el workspace en /workspace
  steps:
    - name: clone
      image: alpine/git:latest
      workingDir: /workspace # Establece el directorio de trabajo dentro del workspace
      script: |
        #!/bin/sh
        set -ex
        # Limpiar el directorio antes de clonar (m√°s robusto)
        rm -rf * .[!.]* ..?*  # Limpia dentro del workingDir /workspace
        git clone $(params.url) . # Clona en el directorio de trabajo actual
        git checkout $(params.revision)
        # ls -la # Lista el contenido del directorio clonado
        # echo "=== Archivos en el directorio app/ ==="
        # ls -la app
        # echo "=== Dockerfile Existe? ==="
        # cat app/Dockerfile || echo "Dockerfile no encontrado"
        # echo "=== requirements.txt Existe? ==="
        # cat app/requirements.txt || echo "requirements.txt no encontrado"
