apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-and-push-task
spec:
  params:
    - name: IMAGE
      description: "Nombre completo de la imagen (incluye registry y tag)"
      type: string
      default: "docker.io/aramos20/myapi:latest"
    - name: CONTEXT_DIR
      description: "Directorio donde se encuentra el Dockerfile, relativo al workspace"
      type: string
      default: "app"
  workspaces:
    - name: source
      mountPath: /workspace/source
  steps:
    # - name: debug
    #   image: alpine:latest
    #   script: |
    #     echo "=== Estructura del Workspace ==="
    #     ls -la $(workspaces.source.path)
    #     echo "=== Contenido de app/ ==="
    #     ls -la $(workspaces.source.path)/app
    #     echo "=== Dockerfile Existe? ==="
    #     cat $(workspaces.source.path)/app/Dockerfile

    - name: verify-credentials
      image: alpine:latest
      script: |
        echo "=== Verificando directorio /kaniko/.docker ==="
        ls -la /kaniko
        echo "=== Contenido de /kaniko/.docker/config.json ==="
        cat /kaniko/.docker/config.json || echo "El archivo no existe"

    - name: build-and-push
      image: gcr.io/kaniko-project/executor:v1.23.2-debug
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      command:
        - /kaniko/executor
      args:
        - --dockerfile=Dockerfile
        - --context=.
        - --destination=$(params.IMAGE)
        - --insecure
        - --skip-tls-verify
        - --verbosity=debug
      volumeMounts:
        - name: dockerhub-config
          mountPath: /kaniko/.docker
  volumes:
    - name: dockerhub-config
      secret:
        secretName: dockerhub-credentials
        items:
          - key: .dockerconfigjson
            path: .docker/config.json
